import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { TRPCReactProvider } from "@/trpc/client";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

/**
 * Root layout for the application; provides global providers and base document structure.
 *
 * Renders an HTML document wrapped with TRPCReactProvider, applies the Geist Sans and Geist Mono font CSS variables
 * plus the `antialiased` utility class to the <body>, and mounts `children` as the page content.
 *
 * @param children - Page content to render inside the document body.
 * @returns The root React element for the app layout.
 */
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <TRPCReactProvider>
      <html>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          {children}
        </body>
      </html>
    </TRPCReactProvider>
  );
}
